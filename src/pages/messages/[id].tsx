import { type GetStaticProps, type NextPage } from "next";
import Head from "next/head";
import { api } from "~/utils/api";
import { generateSsgHelper } from "~/server/helpers/ssgHelper";
import { PageLayout } from "~/components/layout";
import BackButton from "~/components/ReusableElements/BackButton";
import { CreatePostWizard } from "~/components/ReusableElements/CreatePostWizard";
import { useUser } from "@clerk/nextjs";
import { useHomePage } from "~/components/Context/HomePageContext";
import Image from "next/image";
import { useEffect, useState } from "react";
import Link from "next/link";

const MessageConversationPage: NextPage<{ recipientId: string }> = ({
  recipientId,
}) => {
  const { user } = useUser();
  const { data } = api.messages.getById.useQuery({ authorId: user?.id ?? "" });
  const { data: recipientProfile } = api.profile.getUserById.useQuery({
    id: recipientId,
  });
  const [creationMonth, setCreationMonth] = useState<string | null>(null);
  const [creationYear, setCreationYear] = useState<number | null>(null);
 

  useEffect(() => {
    if (recipientProfile?.createdAt) {
      const creationDate = new Date(recipientProfile.createdAt);
      const monthName = creationDate.toLocaleString("default", {
        month: "long",
      });

      setCreationMonth(monthName);
      setCreationYear(creationDate.getFullYear());
    }
  }, [recipientProfile?.createdAt]);

  const { homePage } = useHomePage();

  if (!data) return <div>404</div>;

  return (
    <>
      <Head>
        <title>{`Chatting with ${recipientProfile?.username ?? "" }`}</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <PageLayout>
        <div className="sticky top-0 z-50 flex h-16 items-center justify-between pb-2 backdrop-blur-sm">
          <h1 className="ml-16 mr-auto text-lg font-bold">Post</h1>

          <BackButton />
        </div>
        <div className="flex flex-col items-center justify-center">
          <Image
            src={recipientProfile?.profileImageUrl as string}
            width={100}
            height={100}
            alt="profile"
            className="h-24 w-24 rounded-full"
          />
          <span>
            {recipientProfile?.firstName}
            {"  "}
            {recipientProfile?.lastName}
          </span>
          <Link href={`/@${recipientProfile?.username ?? ""}`} className="text-slate-300">@{recipientProfile?.username}</Link>
          <span>{recipientProfile?.createdAt}</span>
          <span>
            {" "}
            Joined in {creationMonth}
            {" "}
            {creationYear}
          </span>
        </div>

        <div className="mt-6 px-6">
          <CreatePostWizard
            homePage={homePage}
            src="message"
            showLineAbove={false}
            placeholder="Let them know!"
            recipientId={recipientId}
          />
        </div>
      </PageLayout>
    </>
  );
};

export const getStaticProps: GetStaticProps = async (context) => {
  const helpers = generateSsgHelper();

  const recipientId = context.params?.id;

  if (typeof recipientId !== "string") throw new Error("id must be a string");

  await helpers.profile.getUserById.prefetch({ id: recipientId });

  return {
    props: {
      trpcState: helpers.dehydrate(),
      recipientId,
    },
  };
};

export const getStaticPaths = () => {
  return {
    paths: [],
    fallback: "blocking",
  };
};
export default MessageConversationPage;
